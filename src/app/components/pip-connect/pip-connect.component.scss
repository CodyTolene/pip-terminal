@use '../../styles/breakpoints' as bps;
@use '../../styles/colors' as col;
@use '../../styles/scrollbar' as sb;

:host {
  box-sizing: border-box;
  display: flex;
  height: 100%;
  padding: 1rem;
  flex-direction: row;

  @include bps.media('max', 'md') {
    flex-direction: column;
  }

  > main,
  > pip-log {
    flex: 1 1 50%;
    max-height: 100%;
    padding: 1rem;
  }

  > main {
    @include sb.scrollbar;
    align-content: flex-start;
    border-right: 1px dashed col.$pip-green;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    overflow-x: hidden;
    overflow-y: auto;

    @include bps.media('max', 'md') {
      border-right: none;
    }

    > section {
      box-sizing: border-box;
      flex: 0 1 calc(50% - 0.5rem);
      min-width: 300px;

      &:first-child {
        flex: 0 1 100%;
      }

      &:not(:first-child) {
        button {
          margin-bottom: 1rem;
          width: 100%;
        }
      }
    }
  }
}

.connect-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: space-between;
  margin-top: 1rem;

  > button {
    flex: 0 1 calc(50% - 0.5rem);
  }

  .image-wrapper {
    flex: 0 1 100%;
    position: relative;

    img {
      height: 100%;
      object-fit: contain;
      width: 100%;
    }

    .image-overlay {
      border-radius: 0.5rem;
      font-size: 1rem;
      padding: 0.5rem 1rem;
      position: absolute;
      left: -10%;
      top: 50%;
      transform: translate(0, -50%);
      white-space: nowrap;
      width: 100%;
      text-align: center;

      p {
        margin: 0;
      }

      mat-icon.status-icon {
        $icon-size: 250px;

        align-items: center;
        color: col.$pip-green-dark;
        display: block;
        font-size: $icon-size;
        height: $icon-size;
        justify-content: center;
        margin: 0 auto;
        min-width: $icon-size;

        @include bps.media('max', 'lg') {
          $lg-size: calc($icon-size / 2);

          font-size: $lg-size;
          height: $lg-size;
          min-width: $lg-size;
        }

        @include bps.media('max', 'md') {
          $md-size: calc($icon-size / 3);

          font-size: $md-size;
          height: $md-size;
          min-width: $md-size;
        }

        &.active {
          color: col.$pip-green;
        }
      }
    }
  }
}

input {
  height: 2rem;
  width: calc(100% - 0.5rem);
  margin-bottom: 1rem;
}

.file-upload {
  position: relative;
  margin-bottom: 1rem;

  input[type='file'] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    pointer-events: none;
  }

  label {
    background-color: col.$pip-green;
    border-radius: 0.25rem;
    border: none;
    color: col.$gray-darkest;
    cursor: pointer;
    display: inline-block;
    font-size: 1rem;
    font-weight: bolder;
    padding: 0.5rem 1rem;
    text-align: center;
    text-transform: uppercase;
    width: calc(100% - 2rem);

    &.disabled {
      background-color: col.$pip-green-darkest;
      color: col.$gray-darkest;
      cursor: not-allowed;
    }
  }

  label:not(.disabled):hover {
    background-color: col.$pip-green-light;
  }
}
